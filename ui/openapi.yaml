openapi: 3.0.3
info:
  title: Kevin Chat Backend API
  description: |
    API specification for the Kevin Chat backend services.
    This document describes the endpoints used by the Kevin Chat UI.
  version: 1.0.0
  contact:
    name: Kevin.AI Support
servers:
  - url: /api
    description: Default API path

components:
  schemas:
    ChatMessage:
      type: object
      required:
        - id
        - role
        - content
        - timestamp
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the message
        role:
          type: string
          enum: [user, assistant]
          description: Role of the message sender
        content:
          type: string
          description: Message content
        timestamp:
          type: string
          format: date-time
          description: Message timestamp
        thinkingSteps:
          type: array
          description: Thinking steps for assistant messages
          items:
            $ref: '#/components/schemas/ThinkingStep'
        documents:
          type: array
          description: Referenced documents for RAG responses
          items:
            $ref: '#/components/schemas/Document'
      
    ThinkingStep:
      type: object
      properties:
        type:
          type: string
          description: Type of thinking step
        description:
          type: string
          description: Description of the thinking step
        time:
          type: string
          format: date-time
          description: Timestamp of the thinking step
        duration_ms:
          type: number
          description: Duration of the thinking step in milliseconds
    
    Document:
      type: object
      properties:
        title:
          type: string
          description: Document title
        content:
          type: string
          description: Document content
        source:
          type: string
          description: Document source
        url:
          type: string
          description: Document URL
        relevance_score:
          type: number
          description: Relevance score of the document

    ChatSession:
      type: object
      required:
        - id
        - conversationId
        - userId
      properties:
        id:
          type: string
          description: Unique identifier for the session
        conversationId:
          type: string
          description: Conversation identifier
        userId:
          type: string
          description: User identifier
        title:
          type: string
          description: Session title
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
        contextSummary:
          type: string
          description: Summary of the conversation context

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
        details:
          type: string
          description: Detailed error information
        status:
          type: integer
          description: HTTP status code

  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: next-auth.session-token
      description: Session cookie for authentication

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

paths:
  /chat/query:
    post:
      summary: Send a chat query
      description: |
        Sends a query to the chat backend and receives a response.
        This endpoint is used for non-streaming responses.
      operationId: queryChatNonStreaming
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: The user's query
                conversation_id:
                  type: string
                  description: Optional conversation ID for continuing a session
                use_web_search:
                  type: boolean
                  description: Whether to use web search for the response
                  default: false
                stream:
                  type: boolean
                  description: Should be false for this endpoint
                  default: false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: The generated answer
                  conversation_id:
                    type: string
                    description: ID of the conversation
                  documents:
                    type: array
                    description: Referenced documents if RAG was used
                    items:
                      $ref: '#/components/schemas/Document'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /chat/query/stream:
    get:
      summary: Stream a chat query response
      description: |
        Sends a query to the chat backend and receives a streamed response
        using server-sent events (SSE).
      operationId: queryChatStreaming
      security:
        - sessionAuth: []
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: The user's query
        - name: conversation_id
          in: query
          required: false
          schema:
            type: string
          description: Optional conversation ID for continuing a session
        - name: use_web_search
          in: query
          required: false
          schema:
            type: boolean
            default: false
          description: Whether to use web search for the response
        - name: stream
          in: query
          required: false
          schema:
            type: boolean
            default: true
          description: Should be true for this endpoint
      responses:
        '200':
          description: Successful response with server-sent events
          content:
            text/event-stream:
              schema:
                type: string
                format: binary
                description: Server-sent events stream with various event types
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /chat/save:
    post:
      summary: Save a chat session
      description: Save the current chat session, including conversation ID, messages, and title
      operationId: saveChatSession
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - conversation_id
              properties:
                conversation_id:
                  type: string
                  description: Conversation ID
                title:
                  type: string
                  description: Chat session title
                messages:
                  type: array
                  description: Array of chat messages
                  items:
                    $ref: '#/components/schemas/ChatMessage'
                context_summary:
                  type: string
                  description: Summary of the conversation context
      responses:
        '200':
          description: Session saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the save was successful
                  sessionId:
                    type: string
                    description: ID of the saved session
                  conversationId:
                    type: string
                    description: ID of the conversation
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /chat/sessions:
    get:
      summary: List all chat sessions
      description: Retrieve a list of all chat sessions for the authenticated user
      operationId: listChatSessions
      security:
        - sessionAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Number of sessions per page
      responses:
        '200':
          description: List of chat sessions
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessions:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatSession'
                  totalSessions:
                    type: integer
                    description: Total number of sessions
                  totalPages:
                    type: integer
                    description: Total number of pages
                  currentPage:
                    type: integer
                    description: Current page number
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /chat/sessions/{sessionId}:
    parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          type: string
        description: ID of the chat session
    
    get:
      summary: Get a chat session
      description: Retrieve a specific chat session by ID
      operationId: getChatSession
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Chat session details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSession'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/ServerError'
    
    patch:
      summary: Update a chat session
      description: Update a specific chat session (title only)
      operationId: updateChatSession
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: New title for the chat session
      responses:
        '200':
          description: Session updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the update was successful
                  sessionId:
                    type: string
                    description: ID of the updated session
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/ServerError'
    
    delete:
      summary: Delete a chat session
      description: Delete a specific chat session by ID
      operationId: deleteChatSession
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Session deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the deletion was successful
                  sessionId:
                    type: string
                    description: ID of the deleted session
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/ServerError'

  /chat/cache/stats:
    get:
      summary: Get cache statistics
      description: Retrieve statistics about the backend cache
      operationId: getCacheStats
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Cache statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  size:
                    type: integer
                    description: Number of items in the cache
                  hits:
                    type: integer
                    description: Number of cache hits
                  misses:
                    type: integer
                    description: Number of cache misses
                  hitRate:
                    type: number
                    format: float
                    description: Cache hit rate (0-1)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /chat/cache/clear:
    post:
      summary: Clear the cache
      description: Clear the backend cache
      operationId: clearCache
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Cache cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Whether the cache was cleared successfully
                  message:
                    type: string
                    description: Status message
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /health:
    get:
      summary: Health check
      description: Check if the backend API is operational
      operationId: healthCheck
      responses:
        '200':
          description: Backend is operational
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [ok]
                    description: Status of the backend
                  version:
                    type: string
                    description: Version of the backend
        '500':
          $ref: '#/components/responses/ServerError' 